"use strict";(self.webpackChunkpathvector_docs=self.webpackChunkpathvector_docs||[]).push([[535],{3905:function(t,e,r){r.d(e,{Zo:function(){return p},kt:function(){return d}});var o=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function n(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,o)}return r}function i(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?n(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function c(t,e){if(null==t)return{};var r,o,a=function(t,e){if(null==t)return{};var r,o,a={},n=Object.keys(t);for(o=0;o<n.length;o++)r=n[o],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);for(o=0;o<n.length;o++)r=n[o],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var s=o.createContext({}),l=function(t){var e=o.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):i(i({},e),t)),r},p=function(t){var e=l(t.components);return o.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(t,e){var r=t.components,a=t.mdxType,n=t.originalType,s=t.parentName,p=c(t,["components","mdxType","originalType","parentName"]),m=l(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||n;return r?o.createElement(f,i(i({ref:e},p),{},{components:r})):o.createElement(f,i({ref:e},p))}));function d(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var n=r.length,i=new Array(n);i[0]=m;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:a,i[1]=c;for(var l=2;l<n;l++)i[l]=r[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5290:function(t,e,r){r.r(e),r.d(e,{frontMatter:function(){return c},metadata:function(){return s},toc:function(){return l},default:function(){return u}});var o=r(7462),a=r(3366),n=(r(7294),r(3905)),i=["components"],c={title:"About",sidebar_position:1},s={unversionedId:"about",id:"about",isDocsHomePage:!1,title:"About",description:"Pathvector is a declarative edge routing platform that automates route optimization and control plane configuration with secure and repeatable routing policy.",source:"@site/docs/about.md",sourceDirName:".",slug:"/about",permalink:"/docs/about",editUrl:"https://github.com/natesales/pathvector/edit/main/docs/docs/about.md",version:"current",sidebarPosition:1,frontMatter:{title:"About",sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Installation",permalink:"/docs/installation"}},l=[{value:"Features",id:"features",children:[]}],p={toc:l};function u(t){var e=t.components,r=(0,a.Z)(t,i);return(0,n.kt)("wrapper",(0,o.Z)({},p,r,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("img",{alt:"Pathvector Logo",src:"https://pathvector.io/img/black-border.svg",height:"200"}),(0,n.kt)("p",null,"Pathvector is a declarative edge routing platform that automates route optimization and control plane configuration with secure and repeatable routing policy."),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://pathvector.io"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/static/v1?label=docs&message=pathvector.io&color=9407cd&style=for-the-badge",alt:"Docs"})),"\n",(0,n.kt)("a",{parentName:"p",href:"https://goreportcard.com/report/github.com/natesales/pathvector"},(0,n.kt)("img",{parentName:"a",src:"https://goreportcard.com/badge/github.com/natesales/pathvector?style=for-the-badge",alt:"Go Report"})),"\n",(0,n.kt)("a",{parentName:"p",href:"https://app.codecov.io/gh/natesales/pathvector"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/codecov/c/github/natesales/pathvector?style=for-the-badge",alt:"Codecov"})),"\n",(0,n.kt)("a",{parentName:"p",href:"https://bestpractices.coreinfrastructure.org/projects/5328"},(0,n.kt)("img",{parentName:"a",src:"https://img.shields.io/static/v1?label=CII%20Best%20Practices&message=passing&color=green&style=for-the-badge",alt:"CII Best Practices"}))),(0,n.kt)("h2",{id:"features"},"Features"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Robust BGP route filtering with RPKI, IRR, and import limits automatically configured from PeeringDB."),(0,n.kt)("li",{parentName:"ul"},"Automatic route optimization by enriching the standard set of BGP attributes with latency and packet loss metrics."),(0,n.kt)("li",{parentName:"ul"},"Declarative configuration model: Want to track your changes? Just commit your file to version control."),(0,n.kt)("li",{parentName:"ul"},"Data-plane Agnostic: Pathvector works on servers, network switches, embedded devices, etc.")))}u.isMDXComponent=!0}}]);